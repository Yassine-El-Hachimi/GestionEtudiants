// <auto-generated />
using System;
using GestionEtudiants.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionEtudiants.Migrations
{
    [DbContext(typeof(myContext))]
    partial class myContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("N_fois")
                        .HasColumnType("int");

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Absences");

                    b.HasData(
                        new
                        {
                            id = 1,
                            N_fois = 7,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 2,
                            N_fois = 10,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 3,
                            N_fois = 11,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 4,
                            N_fois = 9,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 5,
                            N_fois = 4,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 6,
                            N_fois = 9,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 7,
                            N_fois = 5,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 8,
                            N_fois = 9,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 9,
                            N_fois = 15,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 10,
                            N_fois = 13,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 11,
                            N_fois = 8,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 12,
                            N_fois = 6,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 13,
                            N_fois = 9,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 14,
                            N_fois = 1,
                            id_etudiant = 2004
                        },
                        new
                        {
                            id = 15,
                            N_fois = 5,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 16,
                            N_fois = 13,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 17,
                            N_fois = 1,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 18,
                            N_fois = 0,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 19,
                            N_fois = 11,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 20,
                            N_fois = 7,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 21,
                            N_fois = 11,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 22,
                            N_fois = 14,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 23,
                            N_fois = 10,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 24,
                            N_fois = 0,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 25,
                            N_fois = 11,
                            id_etudiant = 2009
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 2,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 3,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 4,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 5,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 6,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 7,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 8,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 9,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 10,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 11,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 12,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 13,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 14,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 15,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 16,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 17,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 18,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 19,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 20,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 21,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 22,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 23,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 24,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 25,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 26,
                            id_etudiant = 2007,
                            type = "C"
                        },
                        new
                        {
                            id = 27,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 28,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 29,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 30,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 31,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 32,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 33,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 34,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 35,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 36,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 37,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 38,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 39,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 40,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 41,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 42,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 43,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 44,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 45,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 46,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 47,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 48,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 49,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 50,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 51,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 52,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 53,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 54,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 55,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 56,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 57,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 58,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 59,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 60,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 61,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 62,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 63,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 64,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 65,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 66,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 67,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 68,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 69,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 70,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 71,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 72,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 73,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 74,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 75,
                            id_etudiant = 2002,
                            type = "B"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Property<int>("apogee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ddn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delegation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diplome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_inscription")
                        .HasColumnType("int");

                    b.Property<string>("lastname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ldn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lycee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mention_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("validated")
                        .HasColumnType("int");

                    b.Property<string>("ville_diplome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("apogee");

                    b.HasIndex("id_inscription");

                    b.ToTable("Etudiants");

                    b.HasData(
                        new
                        {
                            apogee = 2000,
                            cin = "EE50452",
                            email = "Lorena.Pfannerstill@hotmail.com",
                            id_inscription = 6,
                            nom = "Pfannerstill",
                            password = "0000",
                            prenom = "Lorena",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2001,
                            cin = "EE6897",
                            email = "Derrick_Runolfsdottir@hotmail.com",
                            id_inscription = 4,
                            nom = "Runolfsdottir",
                            password = "0000",
                            prenom = "Derrick",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2002,
                            cin = "EE38529",
                            email = "Mildred1@gmail.com",
                            id_inscription = 5,
                            nom = "Braun",
                            password = "0000",
                            prenom = "Mildred",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2003,
                            cin = "EE37791",
                            email = "Bernice.VonRueden@hotmail.com",
                            id_inscription = 7,
                            nom = "VonRueden",
                            password = "0000",
                            prenom = "Bernice",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2004,
                            cin = "EE6365",
                            email = "Mandy_Glover@hotmail.com",
                            id_inscription = 8,
                            nom = "Glover",
                            password = "0000",
                            prenom = "Mandy",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2005,
                            cin = "EE31347",
                            email = "Angelo_Grimes@hotmail.com",
                            id_inscription = 9,
                            nom = "Grimes",
                            password = "0000",
                            prenom = "Angelo",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2006,
                            cin = "EE43426",
                            email = "Allan.Stehr@yahoo.com",
                            id_inscription = 6,
                            nom = "Stehr",
                            password = "0000",
                            prenom = "Allan",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2007,
                            cin = "EE37036",
                            email = "Bernard_Bosco@hotmail.com",
                            id_inscription = 9,
                            nom = "Bosco",
                            password = "0000",
                            prenom = "Bernard",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2008,
                            cin = "EE27606",
                            email = "Rodney96@hotmail.com",
                            id_inscription = 6,
                            nom = "Orn",
                            password = "0000",
                            prenom = "Rodney",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2009,
                            cin = "EE35965",
                            email = "Duane.McDermott@gmail.com",
                            id_inscription = 6,
                            nom = "McDermott",
                            password = "0000",
                            prenom = "Duane",
                            sexe = "Male",
                            validated = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nom = "GINFO"
                        },
                        new
                        {
                            id = 2,
                            nom = "GTR"
                        },
                        new
                        {
                            id = 3,
                            nom = "GPMC"
                        },
                        new
                        {
                            id = 4,
                            nom = "GINDUS"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiliereId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("ModuleId");

                    b.ToTable("FiliereModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FiliereId = 3,
                            ModuleId = 12
                        },
                        new
                        {
                            Id = 2,
                            FiliereId = 2,
                            ModuleId = 8
                        },
                        new
                        {
                            Id = 3,
                            FiliereId = 1,
                            ModuleId = 5
                        },
                        new
                        {
                            Id = 4,
                            FiliereId = 1,
                            ModuleId = 5
                        },
                        new
                        {
                            Id = 5,
                            FiliereId = 3,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 6,
                            FiliereId = 1,
                            ModuleId = 12
                        },
                        new
                        {
                            Id = 7,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 8,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 9,
                            FiliereId = 2,
                            ModuleId = 8
                        },
                        new
                        {
                            Id = 10,
                            FiliereId = 2,
                            ModuleId = 10
                        },
                        new
                        {
                            Id = 11,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 12,
                            FiliereId = 2,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 13,
                            FiliereId = 2,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 14,
                            FiliereId = 2,
                            ModuleId = 10
                        },
                        new
                        {
                            Id = 15,
                            FiliereId = 3,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 16,
                            FiliereId = 1,
                            ModuleId = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("annee_uni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_filiere")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_filiere");

                    b.ToTable("Inscriptions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 2,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 3,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 4,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 5,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 6,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 7,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 8,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 9,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 10,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_professeur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professeur");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_professeur = 8,
                            nom = "digital system Ergonomic"
                        },
                        new
                        {
                            id = 2,
                            id_professeur = 17,
                            nom = "maroon olive View"
                        },
                        new
                        {
                            id = 3,
                            id_professeur = 17,
                            nom = "withdrawal Small Granite Car Consultant"
                        },
                        new
                        {
                            id = 4,
                            id_professeur = 6,
                            nom = "matrix Run executive"
                        },
                        new
                        {
                            id = 5,
                            id_professeur = 8,
                            nom = "Practical SCSI invoice"
                        },
                        new
                        {
                            id = 6,
                            id_professeur = 22,
                            nom = "virtual models Intelligent"
                        },
                        new
                        {
                            id = 7,
                            id_professeur = 24,
                            nom = "sensor Generic Steel Table Tasty Fresh Pizza"
                        },
                        new
                        {
                            id = 8,
                            id_professeur = 5,
                            nom = "Industrial & Grocery Guadeloupe Refined Wooden Car"
                        },
                        new
                        {
                            id = 9,
                            id_professeur = 23,
                            nom = "protocol Movies, Garden & Shoes Fantastic"
                        },
                        new
                        {
                            id = 10,
                            id_professeur = 5,
                            nom = "Auto Loan Account Grocery & Music azure"
                        },
                        new
                        {
                            id = 11,
                            id_professeur = 2,
                            nom = "Generic Baby, Garden & Home unleash"
                        },
                        new
                        {
                            id = 12,
                            id_professeur = 10,
                            nom = "Savings Account Beauty, Shoes & Music Money Market Account"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_module")
                        .HasColumnType("int");

                    b.Property<int?>("id_type")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_module");

                    b.HasIndex("id_type");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            evaluation = "Argentina",
                            id_module = 4,
                            id_type = 3,
                            semestre = "2",
                            valeur = "8"
                        },
                        new
                        {
                            id = 2,
                            evaluation = "Concrete",
                            id_module = 12,
                            id_type = 3,
                            semestre = "2",
                            valeur = "18"
                        },
                        new
                        {
                            id = 3,
                            evaluation = "Road",
                            id_module = 12,
                            id_type = 3,
                            semestre = "2",
                            valeur = "1"
                        },
                        new
                        {
                            id = 4,
                            evaluation = "Metrics",
                            id_module = 6,
                            id_type = 3,
                            semestre = "1",
                            valeur = "0"
                        },
                        new
                        {
                            id = 5,
                            evaluation = "Practical Soft Gloves",
                            id_module = 8,
                            id_type = 2,
                            semestre = "2",
                            valeur = "10"
                        },
                        new
                        {
                            id = 6,
                            evaluation = "transmitting",
                            id_module = 7,
                            id_type = 2,
                            semestre = "2",
                            valeur = "10"
                        },
                        new
                        {
                            id = 7,
                            evaluation = "interactive",
                            id_module = 4,
                            id_type = 2,
                            semestre = "2",
                            valeur = "13"
                        },
                        new
                        {
                            id = 8,
                            evaluation = "Industrial, Books & Books",
                            id_module = 10,
                            id_type = 1,
                            semestre = "2",
                            valeur = "5"
                        },
                        new
                        {
                            id = 9,
                            evaluation = "radical",
                            id_module = 8,
                            id_type = 3,
                            semestre = "2",
                            valeur = "16"
                        },
                        new
                        {
                            id = 10,
                            evaluation = "Botswana",
                            id_module = 10,
                            id_type = 3,
                            semestre = "1",
                            valeur = "17"
                        },
                        new
                        {
                            id = 11,
                            evaluation = "Connecticut",
                            id_module = 1,
                            id_type = 2,
                            semestre = "2",
                            valeur = "15"
                        },
                        new
                        {
                            id = 12,
                            evaluation = "ADP",
                            id_module = 2,
                            id_type = 1,
                            semestre = "0",
                            valeur = "9"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proffesseurs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE893539",
                            email = "Nancy.Pollich@hotmail.com",
                            nom = "Pollich",
                            prenom = "Nancy",
                            tel = "(782) 903-7735"
                        },
                        new
                        {
                            id = 2,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE101352",
                            email = "Tim92@hotmail.com",
                            nom = "Botsford",
                            prenom = "Tim",
                            tel = "1-542-799-9387"
                        },
                        new
                        {
                            id = 3,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE541370",
                            email = "Dianna13@yahoo.com",
                            nom = "Lehner",
                            prenom = "Dianna",
                            tel = "374.719.0038 x77195"
                        },
                        new
                        {
                            id = 4,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE988777",
                            email = "Wendy_Bode@yahoo.com",
                            nom = "Bode",
                            prenom = "Wendy",
                            tel = "1-818-275-4335"
                        },
                        new
                        {
                            id = 5,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE44615",
                            email = "Rosa.Bednar28@hotmail.com",
                            nom = "Bednar",
                            prenom = "Rosa",
                            tel = "918.981.6480"
                        },
                        new
                        {
                            id = 6,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE420066",
                            email = "Van_Price@yahoo.com",
                            nom = "Price",
                            prenom = "Van",
                            tel = "1-869-536-9165"
                        },
                        new
                        {
                            id = 7,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE534812",
                            email = "Don_Connelly60@hotmail.com",
                            nom = "Connelly",
                            prenom = "Don",
                            tel = "443.988.7176 x902"
                        },
                        new
                        {
                            id = 8,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE716410",
                            email = "Forrest.Howe68@hotmail.com",
                            nom = "Howe",
                            prenom = "Forrest",
                            tel = "811.790.7945"
                        },
                        new
                        {
                            id = 9,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE982253",
                            email = "Kathryn.Beier@hotmail.com",
                            nom = "Beier",
                            prenom = "Kathryn",
                            tel = "(857) 809-7754 x9792"
                        },
                        new
                        {
                            id = 10,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE445891",
                            email = "Camille.Howe92@gmail.com",
                            nom = "Howe",
                            prenom = "Camille",
                            tel = "568-764-9424"
                        },
                        new
                        {
                            id = 11,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE382204",
                            email = "Thomas.Jaskolski43@gmail.com",
                            nom = "Jaskolski",
                            prenom = "Thomas",
                            tel = "(304) 546-6109 x9385"
                        },
                        new
                        {
                            id = 12,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE85465",
                            email = "Larry77@hotmail.com",
                            nom = "Kling",
                            prenom = "Larry",
                            tel = "(739) 277-9718 x366"
                        },
                        new
                        {
                            id = 13,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE513545",
                            email = "Herman_Spencer@yahoo.com",
                            nom = "Spencer",
                            prenom = "Herman",
                            tel = "865-943-6644"
                        },
                        new
                        {
                            id = 14,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE272676",
                            email = "Danielle.Johnston@gmail.com",
                            nom = "Johnston",
                            prenom = "Danielle",
                            tel = "(752) 684-9430"
                        },
                        new
                        {
                            id = 15,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE865050",
                            email = "Lance.Ruecker@gmail.com",
                            nom = "Ruecker",
                            prenom = "Lance",
                            tel = "1-434-430-6517 x8153"
                        },
                        new
                        {
                            id = 16,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE418946",
                            email = "Fernando_Nienow16@hotmail.com",
                            nom = "Nienow",
                            prenom = "Fernando",
                            tel = "(970) 918-1457"
                        },
                        new
                        {
                            id = 17,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE715376",
                            email = "Eva_Ondricka@yahoo.com",
                            nom = "Ondricka",
                            prenom = "Eva",
                            tel = "997-745-6199"
                        },
                        new
                        {
                            id = 18,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE319080",
                            email = "Verna57@yahoo.com",
                            nom = "Hammes",
                            prenom = "Verna",
                            tel = "(593) 465-9910"
                        },
                        new
                        {
                            id = 19,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE156081",
                            email = "Woodrow.Nader@gmail.com",
                            nom = "Nader",
                            prenom = "Woodrow",
                            tel = "(396) 532-5340 x998"
                        },
                        new
                        {
                            id = 20,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE132739",
                            email = "Hope55@hotmail.com",
                            nom = "Padberg",
                            prenom = "Hope",
                            tel = "(788) 335-7102 x8850"
                        },
                        new
                        {
                            id = 21,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE949657",
                            email = "Elias.Mueller32@hotmail.com",
                            nom = "Mueller",
                            prenom = "Elias",
                            tel = "(489) 627-0384 x39701"
                        },
                        new
                        {
                            id = 22,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE73737",
                            email = "Victor.Roberts64@hotmail.com",
                            nom = "Roberts",
                            prenom = "Victor",
                            tel = "1-439-360-6855 x47546"
                        },
                        new
                        {
                            id = 23,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE244728",
                            email = "Joy_Barrows@hotmail.com",
                            nom = "Barrows",
                            prenom = "Joy",
                            tel = "(494) 660-9849"
                        },
                        new
                        {
                            id = 24,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE817024",
                            email = "Ramon.Fritsch@yahoo.com",
                            nom = "Fritsch",
                            prenom = "Ramon",
                            tel = "599-280-2677"
                        },
                        new
                        {
                            id = 25,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE899665",
                            email = "Allan.Dicki16@yahoo.com",
                            nom = "Dicki",
                            prenom = "Allan",
                            tel = "1-483-453-7173"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            id = 1,
                            valeur = "DS1"
                        },
                        new
                        {
                            id = 2,
                            valeur = "DS2"
                        },
                        new
                        {
                            id = 3,
                            valeur = "RAT"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("absences")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("documents")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Inscription", "Inscription")
                        .WithMany("etudiants")
                        .HasForeignKey("id_inscription");

                    b.Navigation("Inscription");
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("FiliereModules")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("FiliereModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("inscriptions")
                        .HasForeignKey("id_filiere");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Professeur", "Professeur")
                        .WithMany("modules")
                        .HasForeignKey("id_professeur");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("notes")
                        .HasForeignKey("id_module");

                    b.HasOne("GestionEtudiants.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("id_type");

                    b.Navigation("Module");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Navigation("absences");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Navigation("etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Navigation("modules");
                });
#pragma warning restore 612, 618
        }
    }
}
